.container {
    display: flex;
    gap: 20px;
}

.button-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
    align-items: center;
}

.sort-container {
    display: flex;
}

.sort-title {
    place-items: center;
    display: flex;
    gap: 10px;
    flex-flow: wrap;
    place-content: center;
}

.cell {
    border: 1px solid black;
    border-radius: 20%;
    height: 30px;
    width: 30px;
    align-content: center;
    text-align: center;
    box-shadow: 2px 2px 0 rgb(0 0 0 / 38%);
}

.stored-cell {
    position: absolute;
    transform: translate(-50%, 70px);
    left: 50%;
}

.current-cell {
    background-color: #d8adff;
}

.target-cell {
}

.bar-container {
    display: flex;
    gap: 20px;
    height: 100px;
}

.bar {
    width: 30px;
    background-color: #d8adff;
    place-self: self-end;
    border-radius: 5px;
}

.animation-set {
    animation: moveToSet var(--animationSpeed) ease-in-out forwards;
    left: 50%;
}

.animation-primary {
    animation: moveToPrimary var(--animationSpeed) ease-in-out forwards;
}

.animation-secondary {
    animation: moveToSecondary var(--animationSpeed) ease-in-out calc(var(--animationSpeed) * 0.75) forwards;
}

.animation-discard {
    animation: discard var(--animationSpeed) ease-in-out calc(var(--animationSpeed) * 0.75) forwards;
    left: 50%;
}

.animation-store {
    animation: store var(--animationSpeed) ease-in-out forwards;
    left: 50%;
}

.animation-set-from-stored {
    animation: setFromStored var(--animationSpeed) ease-in-out forwards;
    left: 50%;
}

@keyframes moveToSet {
    0% {
        transform: translate(calc(-50% + var(--start, 0)), 0);
    }
    25% {
        transform: translate(calc(-50% + var(--start, 0)), -40px);
    }
    75% {
        transform: translate(calc(-50% + var(--target)), -40px);
    }
    100% {
        transform: translate(calc(-50% + var(--target)), 0);
    }
  }


@keyframes moveToPrimary {
    0% {
        transform: translate(var(--start, 0), 0);
    }
    25% {
        transform: translate(var(--start, 0), -40px);
    }
    75% {
        transform: translate(var(--target), -40px);
    }
    100% {
        transform: translate(var(--target), 0);
    }
  }

@keyframes moveToSecondary {
    0% {
        transform: translate(0, 0);
    }
    25% {
        transform: translate(0, 40px);
    }
    75% {
        transform: translate(var(--current), 40px);
    }
    100% {
        transform: translate(var(--current), 0);
    }
  }

  @keyframes discard {
    0% {
        transform: translate(0, 0);
    }
    25% {
        transform: translate(0, 40px) scale(1);
        opacity: 0;
    }
    100% {
        transform: translate(0, 40px) scale(1);
        opacity: 0;
    }
  }

  @keyframes store {
    0% {
        transform: translate(calc(-50% + var(--start)), 0);
    }
    25% {
        transform: translate(calc(-50% + var(--start)), 35px);
    }
    75% {
        transform: translate(-50%, 35px);
    }
    100% {
        transform: translate(-50%, 70px);
    }
  }

  @keyframes setFromStored {
    0% {
        transform: translate(-50%, 70px);
    }
    25% {
        transform: translate(-50%, 35px);
    }
    75% {
        transform: translate(calc(-50% + var(--target)), 35px);
    }
    100% {
        transform: translate(calc(-50% + var(--target)), 0);
    }
  }